#question-container {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  user-select: none;
  overflow: hidden;
  opacity: 0;
  border-radius: inherit;
  animation: fade-in 0.5s ease forwards;
  transition: all 0.2s ease;
}

#question-container.correct {
  background: var(--success-color);
}

#question-container.incorrect {
  background: var(--danger-color);
}

#question-container.correct .question #text,
#question-container.incorrect .question #text {
  opacity: 0;
}

#question-container.correct .answers,
#question-container.incorrect .answers {
  height: 0;
}

#question-container.correct .question .feedback {
  content: "Correct!";
  opacity: 1;
}

#question-container.incorrect .question .feedback {
  content: "Incorrect";
  opacity: 1;
}

#question-container #next {
  width: 100%;
  height: 0;
  overflow: hidden;
  padding: 0;
  transition: all 0.3s ease;
}

#question-container #next .btn {
  width: 100%;
  height: 100%;
  background: var(--primary-color);
  border-radius: 10px;
  padding: 20px;
  font-size: 30px;
  font-weight: 600;
  text-align: center;
  box-shadow: 0 4px 0 var(--primary-color-dark);
  border: 3px solid var(--primary-color-dark);
  transition: all 0.3s ease;
}

#question-container #next .btn:hover {
  filter: brightness(120%);
  transform: translateY(-2px);
  box-shadow: 0 6px 0 var(--primary-color-dark);
}

#question-container #next .btn:active {
  transform: translateY(2px);
  box-shadow: 0 2px 0 var(--primary-color-dark);
  transition: all 0.05s ease;
}

#question-container.correct #next,
#question-container.incorrect #next {
  height: 200px;
  padding: 20px 40px;
}

#question-container .question {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  line-break: all;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 50px;
  font-weight: 800;
  padding: 20px;
  text-align: center;
  color: var(--white-color);
}

#question-container .question #text {
  font-size: inherit;
  font-weight: inherit;
  color: inherit;
  transition: all 0.2s ease;
}

#question-container .question .feedback {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin: 40px;
  opacity: 0;
  background: rgba(50, 50, 50, 0.2);
  border-radius: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 20px;
  text-align: center;
  transition: all 0.2s ease;
}

#question-container .question .feedback h1 {
  font-size: 40px;
  font-weight: 800;
  color: var(--white-color);
}

#question-container .question .feedback p {
  font-size: 30px;
  font-weight: 600;
  color: var(--white-color);
  text-align: center;
  padding: 10px;
  border-radius: 10px;
  background: inherit;
  max-width: 80%;
}

#question-container .question .feedback p span {
  font-size: 20px;
  font-weight: 400;
}

#question-container.correct .question .feedback p #money {
  animation: correct 1s 0.1s ease;
}

#question-container.incorrect .question .feedback p #money {
  animation: incorrect 1s 0.1s ease;
}

#question-container .answers {
  width: 100%;
  height: 100%;
  display: flex;
  flex-wrap: wrap;
  overflow: hidden;
  border-bottom-left-radius: inherit;
  border-bottom-right-radius: inherit;
  transition: all 0.2s ease;
}

#question-container .answers .answer {
  width: 50%;
  height: 50%;
  min-height: 100px;
  overflow: hidden;
  word-break: break-all;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-size: 30px;
  font-weight: 600;
  cursor: pointer;
  filter: brightness(100%);
  transition: all 0.3s ease;
}

#question-container .answers:not(:has(.answer:nth-child(3))) .answer {
  height: 100%;
}

#question-container .answers .answer:not(.faded):not(.check):hover {
  filter: brightness(120%);
}

#question-container .answers .answer.faded {
  opacity: 0.3;
  cursor: default;
  pointer-events: none;
  user-select: none;
}

#question-container .a1 {
  background: var(--a1);
  border: 8px solid var(--a1-dark);
}

#question-container .a2 {
  background: var(--a2);
  border: 8px solid var(--a2-dark);
}

#question-container .a3 {
  background: var(--a3);
  border: 8px solid var(--a3-dark);
}

#question-container .a4 {
  background: var(--a4);
  border: 8px solid var(--a4-dark);
}

#question-container .answers :nth-last-child(2) {
  border-bottom-left-radius: inherit;
}

#question-container .answers :nth-last-child(1) {
  border-bottom-right-radius: inherit;
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@media screen and (max-width: 850px) {
  #question-container .answers .answer {
    font-size: 20px;
    width: 100%;
    height: 25%;
    min-height: 100px;
    border-width: 5px;
  }

  #question-container .answers:not(:has(.answer:nth-child(3))) .answer {
    height: 50%;
  }

  #question-container .question {
    font-size: 30px;
    min-height: 100px;
    height: fit-content;
  }

  #question-container.correct .question,
  #question-container.incorrect .question {
    height: 100%;
  }

  #question-container .question .feedback h1 {
    font-size: 30px;
  }

  #question-container .question .feedback p {
    font-size: 20px;
  }

  #question-container #next .btn {
    font-size: 20px;
    padding: 10px;
  }

  #question-container.correct #next,
  #question-container.incorrect #next {
    height: 100px;
    padding: 10px 20px;
  }

  #question-container .answers :nth-last-child(2) {
    border-bottom-left-radius: 0;
  }

  #question-container .answers :nth-last-child(1) {
    border-bottom-left-radius: inherit;
    border-bottom-right-radius: inherit;
  }
}

@keyframes correct {
  0%,
  100% {
    transform: scale(1) rotate(0deg);
  }
  25% {
    transform: scale(0.8) rotate(0deg);
  }
  40%,
  60%,
  80% {
    transform: scale(2) rotate(10deg);
  }
  50%,
  70% {
    transform: scale(2) rotate(-10deg);
  }
  90% {
    transform: scale(2) rotate(0deg);
  }
}

@keyframes incorrect {
  0%,
  100% {
    transform: rotate(0deg) translateX(0);
  }
  12.5%,
  37.5%,
  62.5%,
  87.5% {
    transform: rotate(10deg) translateX(10px);
  }
  25%,
  50%,
  75% {
    transform: rotate(-10deg) translateX(-10px);
  }
}
